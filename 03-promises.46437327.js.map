{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEQG,EAArB,CAAEJ,WAAUC,S,GAEpBA,E,IAqBP,IAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAnBR,SAAwBC,EAAQC,EAAYC,GAC1C,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAEhCnB,EAAcmB,EADAF,GAAcE,EAAI,GAAKD,GAElCE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBJ,EAAAwB,SAASC,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBJ,EAAAwB,SAASC,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAYnD0B,CAHeC,SAASnB,EAAKoB,SAASd,OAAOe,MAAO,IACjCF,SAASnB,EAAKoB,SAAS5B,MAAM6B,MAAO,IAC1CF,SAASnB,EAAKoB,SAASZ,KAAKa,MAAO,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notiflix } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Виконуємо проміс зі значеннями position і delay\n      } else {\n        reject({ position, delay }); // Відхиляємо проміс зі значеннями position і delay\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(amount, firstDelay, step) {\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + (i - 1) * step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const amount = parseInt(form.elements.amount.value, 10);\n  const firstDelay = parseInt(form.elements.delay.value, 10);\n  const step = parseInt(form.elements.step.value, 10);\n  createPromises(amount, firstDelay, step);\n});\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","amount","firstDelay","step","i","then","param","Notiflix","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromises","parseInt","elements","value"],"version":3,"file":"03-promises.46437327.js.map"}