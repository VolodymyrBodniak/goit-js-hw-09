{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEQG,EAArB,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAqBb,MAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAMC,kBAnBR,SAAwBC,EAAQC,EAAYC,GAC1C,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAEhCnB,EAAcmB,EADAF,GAAcE,EAAI,GAAKD,GAElCE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAuB,SAASC,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAuB,SAASC,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,G,CAYrDwB,CAHeC,SAASjB,EAAKkB,SAASZ,OAAOa,MAAO,IACjCF,SAASjB,EAAKkB,SAAS1B,MAAM2B,MAAO,IAC1CF,SAASjB,EAAKkB,SAASV,KAAKW,MAAO,IACR","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notiflix } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Виконуємо проміс зі значеннями position і delay\n      } else {\n        reject({ position, delay }); // Відхиляємо проміс зі значеннями position і delay\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(amount, firstDelay, step) {\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + (i - 1) * step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const amount = parseInt(form.elements.amount.value, 10);\n  const firstDelay = parseInt(form.elements.delay.value, 10);\n  const step = parseInt(form.elements.step.value, 10);\n  createPromises(amount, firstDelay, step);\n});\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","amount","firstDelay","step","i","then","Notiflix","Notify","success","catch","failure","$47d4ff9957288465$var$createPromises","parseInt","elements","value"],"version":3,"file":"03-promises.e4286537.js.map"}