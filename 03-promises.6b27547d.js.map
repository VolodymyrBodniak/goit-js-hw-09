{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEQG,EAArB,CAAEJ,WAAUC,S,GAEpBA,E,IAqBP,IAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAMC,EAASC,SAASP,EAAKQ,SAASF,OAAOG,MAAO,IAC9CC,EAAaH,SAASP,EAAKQ,SAAShB,MAAMiB,MAAO,IACjDE,EAAOJ,SAASP,EAAKQ,SAASG,KAAKF,MAAO,IAE5CC,GAAc,GAAKC,GAAQ,EAC7BC,EAAAxB,GAASyB,OAAOC,QACd,qEA1BN,SAAwBR,EAAQI,EAAYC,GAC1C,IAAK,IAAII,EAAI,EAAGA,GAAKT,EAAQS,GAAK,EAEhCzB,EAAcyB,EADAL,GAAcK,EAAI,GAAKJ,GAElCK,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBoB,EAAAxB,GAASyB,OAAOK,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAH,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBoB,EAAAxB,GAASyB,OAAOQ,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAoBnD8B,CAAehB,EAAQI,EAAYC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Виконуємо проміс зі значеннями position і delay\n      } else {\n        reject({ position, delay }); // Відхиляємо проміс зі значеннями position і delay\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(amount, firstDelay, step) {\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + (i - 1) * step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const amount = parseInt(form.elements.amount.value, 10);\n  const firstDelay = parseInt(form.elements.delay.value, 10);\n  const step = parseInt(form.elements.step.value, 10);\n\n  if (firstDelay <= 0 || step <= 0) {\n    Notiflix.Notify.warning(\n      'Please enter values greater than 0 for First delay and Delay step'\n    );\n    return;\n  }\n\n  createPromises(amount, firstDelay, step);\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","amount","parseInt","elements","value","firstDelay","step","$parcel$interopDefault","Notify","warning","i","then","param","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.6b27547d.js.map"}